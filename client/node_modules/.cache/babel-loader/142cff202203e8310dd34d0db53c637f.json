{"ast":null,"code":"import _objectSpread from \"/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyB6tkw4dEZ_0ptrw_A-Yj2SUC8_48-qUoA',\n  authDomain: 'crwn-db-1049.firebaseapp.com',\n  databaseURL: 'https://crwn-db-1049.firebaseio.com',\n  projectId: 'crwn-db-1049',\n  storageBucket: 'crwn-db-1049.appspot.com',\n  messagingSenderId: '669482266061',\n  appId: '1:669482266061:web:452e43bfdb208ab1'\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(\"@ITS THE SNAPSHOT \\n \", snapShot.data());\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (err) {\n      console.log(\"error creating user \", err);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n}; // mimicking functionality to get user when we don't have firebase as backend\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","data","exists","displayName","email","createdAt","Date","set","err","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollection","docs","map","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n\tapiKey: 'AIzaSyB6tkw4dEZ_0ptrw_A-Yj2SUC8_48-qUoA',\r\n\tauthDomain: 'crwn-db-1049.firebaseapp.com',\r\n\tdatabaseURL: 'https://crwn-db-1049.firebaseio.com',\r\n\tprojectId: 'crwn-db-1049',\r\n\tstorageBucket: 'crwn-db-1049.appspot.com',\r\n\tmessagingSenderId: '669482266061',\r\n\tappId: '1:669482266061:web:452e43bfdb208ab1'\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tconsole.log(`@ITS THE SNAPSHOT \\n `, snapShot.data());\r\n\r\n\tif (!snapShot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(`error creating user `, err);\r\n\t\t}\r\n\t}\r\n\treturn userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n\tcollectionKey,\r\n\tobjectsToAdd\r\n) => {\r\n\tconst collectionRef = firestore.collection(collectionKey);\r\n\r\n\tconst batch = firestore.batch();\r\n\tobjectsToAdd.forEach(obj => {\r\n\t\tconst newDocRef = collectionRef.doc();\r\n\t\tbatch.set(newDocRef, obj);\r\n\t});\r\n\r\n\treturn await batch.commit();\r\n};\r\n\r\nexport const convertCollectionSnapshotToMap = collections => {\r\n\tconst transformedCollection = collections.docs.map(doc => {\r\n\t\tconst { title, items } = doc.data();\r\n\r\n\t\treturn {\r\n\t\t\trouteName: encodeURI(title.toLowerCase()),\r\n\t\t\tid: doc.id,\r\n\t\t\ttitle,\r\n\t\t\titems\r\n\t\t};\r\n\t});\r\n\r\n\treturn transformedCollection.reduce((accumulator, collection) => {\r\n\t\taccumulator[collection.title.toLowerCase()] = collection;\r\n\t\treturn accumulator;\r\n\t}, {});\r\n};\r\n\r\n// mimicking functionality to get user when we don't have firebase as backend\r\nexport const getCurrentUser = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n\t\t\tunsubscribe();\r\n\t\t\tresolve(userAuth);\r\n\t\t}, reject);\r\n\t});\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}