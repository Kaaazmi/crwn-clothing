{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects'; // sagas don't use dispatch to dispatch actions but use put\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from '../../redux/shop/shop.actions.js';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure());\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsStartAsync","collectionRef","collection","snapShot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C,C,CACA;;AAEA,SACCC,SADD,EAECC,8BAFD,QAGO,+BAHP;AAKA,SACCC,uBADD,EAECC,uBAFD,QAGO,kCAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,0BAAV,GAAuC;AAC7C,MAAI;AACH,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,8BAAD,EAAiCO,QAAjC,CAAjC;AACA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMb,GAAG,CAACK,uBAAuB,EAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUS,qBAAV,GAAkC;AACxC,QAAMhB,UAAU,CACfQ,eAAe,CAACS,uBADD,EAEfR,0BAFe,CAAhB;AAIA;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAMf,GAAG,CAAC,CAACF,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\n// sagas don't use dispatch to dispatch actions but use put\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n\tfetchCollectionsSuccess,\r\n\tfetchCollectionsFailure\r\n} from '../../redux/shop/shop.actions.js';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsStartAsync() {\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapShot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(convertCollectionSnapshotToMap, snapShot);\r\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\r\n\t} catch (error) {\r\n\t\tyield put(fetchCollectionsFailure());\r\n\t}\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeLatest(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsStartAsync\r\n\t);\r\n}\r\n\r\nexport function* shopSagas() {\r\n\tyield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}