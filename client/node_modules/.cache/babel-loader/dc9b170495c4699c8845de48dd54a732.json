{"ast":null,"code":"import _objectSpread from \"/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      setCredentials(_objectSpread({}, userCredentials, {\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }));\n      return;\n    }\n\n    signUpStart(email, password, displayName);\n    setCredentials(_objectSpread({}, userCredentials, {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }));\n  };\n\n  const handleChange = event => {\n    setCredentials(_objectSpread({}, userCredentials, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign up with email and password\"), React.createElement(\"form\", {\n    action: \"\",\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: 'Display Name',\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: 'E-Mail',\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: 'Password',\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: 'Confirm Password',\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    className: \"button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, 'Sign Up'.toUpperCase())));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/mnt/e/4 - Development/WEB DEVELOPING/Zero To Mastery React/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","toUpperCase","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport './sign-up.styles.scss';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\tconst [userCredentials, setCredentials] = useState({\r\n\t\tdisplayName: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tconfirmPassword: ''\r\n\t});\r\n\r\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\talert('Passwords do not match');\r\n\t\t\tsetCredentials({\r\n\t\t\t\t...userCredentials,\r\n\t\t\t\tdisplayName: '',\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tconfirmPassword: ''\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsignUpStart(email, password, displayName);\r\n\r\n\t\tsetCredentials({\r\n\t\t\t...userCredentials,\r\n\t\t\tdisplayName: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tconfirmPassword: ''\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = event => {\r\n\t\tsetCredentials({\r\n\t\t\t...userCredentials,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='sign-up'>\r\n\t\t\t<h2 className='title'>I do not have a account</h2>\r\n\t\t\t<span>Sign up with email and password</span>\r\n\t\t\t<form action='' className='sign-up-form' onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='displayName'\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel={'Display Name'}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel={'E-Mail'}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel={'Password'}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='confirmPassword'\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel={'Confirm Password'}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomButton className='button' type='submit'>\r\n\t\t\t\t\t{'Sign Up'.toUpperCase()}\r\n\t\t\t\t</CustomButton>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsignUpStart: (email, password, displayName) =>\r\n\t\tdispatch(signUpStart({ email, password, displayName }))\r\n});\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapDispatchToProps\r\n)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}